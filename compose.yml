services:
  web:
    build: apps/web
    ports:
      - "4321:4321"
    volumes:
      - /app/node_modules
    environment:
      - NODE_ENV=development
    develop:
      watch:
        - action: sync
          path: apps/web/
          target: /app
          ignore: node_modules
        - action: rebuild
          path: package.json
        - action: rebuild
          path: pnpm-lock.yaml
  db-api:
    build: apps/db-api/
    ports:
      - "8000:8000"
    env_file:
      - .env
    develop:
      watch:
        - action: sync
          path: apps/db-api/
          target: /app
          ignore:
            - .venv/
        - action: rebuild
          path: apps/db-api/uv.lock
    depends_on: [master]
  master:
    container_name: "${COMPOSE_PROJECT_NAME:-citus}-master"
    image: "citusdata/citus:13.0.3"
    ports: ["${COORDINATOR_EXTERNAL_PORT:-5432}:5432"]
    labels: ["com.citusdata.role=Master"]
    environment: &AUTH
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGUSER: "${POSTGRES_USER:-postgres}"
      PGPASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_HOST_AUTH_METHOD: "${POSTGRES_HOST_AUTH_METHOD:-trust}"
  worker:
    image: "citusdata/citus:13.0.3"
    labels: ["com.citusdata.role=Worker"]
    depends_on: [manager]
    environment: *AUTH
    command: "/wait-for-manager.sh"
    volumes:
      - healthcheck-volume:/healthcheck
  manager:
    container_name: "${COMPOSE_PROJECT_NAME:-citus}-manager"
    image: "citusdata/membership-manager:0.3.0"
    volumes:
      - "${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock"
      - healthcheck-volume:/healthcheck
    depends_on: [master]
    environment: *AUTH

volumes:
  healthcheck-volume:
